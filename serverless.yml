service:          ${self:custom.service.NAME}

frameworkVersion: ">=1.25.0 <2.0.0"

plugins:
  - serverless-plugin-webpack
  - serverless-aws-documentation
  - serverless-domain-manager
  - serverless-offline

package:
  individually:           true # package each lambda function individually
  excludeDevDependencies: false # we lean on webpack do the tree-shaking
  exclude:                ['node_modules/**/aws-sdk/**']

custom: ${file(src/config/custom.yml)}

provider:
  name:       aws
  memorySize: 1024
  timeout:    30
  deploymentBucket:
    # Deployment bucket name. Default is generated by the framework
    # name: com.serverless.${self:provider.region}.deploys
    # using server-side encryption
    serverSideEncryption: AES256
  runtime:    ${self:custom.service.RUNTIME}
  stage:      ${self:custom.service.STAGE}
  region:     ${self:custom.service.REGION}
  stackTags:  ${file(src/config/custom.yml):stackTags}
  environment:
    # <<:               ${file(src/config/custom.yml):environmentVariables}
    GW_URL:           ${self:custom.service.GW_URL}
    NODE_ENV:         ${self:custom.service.STAGE}
  iamRoleStatements:  ${file(src/config/iam_role_statements.yml)}

functions: # ${file(src/config/functions.yml)}
  # <<:   ${file(src/config/functions.yml)}
  # ping: ${file(src/config/functions.yml):ping}

  hello:
    description: HELLO WORLD
    handler: build/routes/ping/index.ping
    events:
      - http:
          path: ping
          method: get
          cors: true
          documentation:
            summary: HELLO WORLD
            description: HELLO WORLD!

resources: ${file(src/config/resources.yml)}
