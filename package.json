{
  "name": "application-service",
  "version": "3.0.4",
  "description": "Application Service",
  "author": "Hixme.com",
  "contributors": [
    "Bill Barnes <bill.barnes@hixme.com> (https://hixme.com)",
    "Bill Tran <bill.tran@hixme.com> (https://hixme.com)",
    "Greg Cardoni <greg@cardoni.net> (https://cardoni.net)"
  ],
  "homepage": "https://hixme.com",
  "license": "MIT",
  "main": "build/index",
  "private": true,
  "repository": {
    "type": "git",
    "url": "git+ssh://git@bitbucket.org/hixme/application-service.git"
  },
  "config": {
    "// NOTE": "SERVERLESS CONFIGURATION VALUES BELOW",
    "build_directory": "build",
    "inspector_port": 9229,
    "log_fetch_refresh_interval": 5000,
    "log_fetch_start_time": "2h",
    "region": "us-west-2",
    "runtime": "nodejs6.10",
    "stage": "int"
  },
  "scripts": {
    "build:min": "npm run build -- --compact --minified --source-maps false",
    "build:watch": "cross-env BABEL_ENV=commonjs babel src --ignore '**/*/*.test.js' --out-dir $npm_package_config_build_directory --source-maps --copy-files --no-comments --watch",
    "build": "npm run clean && mkdir -p .webpack/.serverless && cross-env BABEL_ENV=commonjs babel src --ignore '**/*/*.test.js' --out-dir $npm_package_config_build_directory --source-maps --copy-files --no-comments",
    "clean": "rimraf build coverage .webpack .serverless",
    "coverage": "npm run test -- --coverage",
    "deploy:custom": "npm run build && cross-env SLS_DEBUG=* sls deploy --aws-s3-accelerate -v -r $npm_package_config_region --stage",
    "deploy:dev": "npm run build && cross-env STAGE=dev SLS_DEBUG=* sls deploy --aws-s3-accelerate -v --stage dev -r $npm_package_config_region",
    "deploy:function:dev": "npm run build && cross-env STAGE=dev SLS_DEBUG=* sls deploy --aws-s3-accelerate -v --stage dev -r $npm_package_config_region function -f",
    "deploy:function:int": "npm run build:min && cross-env STAGE=int sls deploy --aws-s3-accelerate --stage int -r $npm_package_config_region function -f",
    "deploy:function:prod": "npm run build:min && cross-env STAGE=prod sls deploy --aws-s3-accelerate --stage prod -r $npm_package_config_region function -f",
    "deploy:function": "npm run deploy:function:$npm_package_config_stage",
    "deploy:int": "npm run build:min && cross-env STAGE=int sls deploy --aws-s3-accelerate --stage int -r $npm_package_config_region",
    "deploy:prod": "npm run build:min && cross-env STAGE=prod sls deploy --aws-s3-accelerate --stage prod -r $npm_package_config_region",
    "deploy": "npm run deploy:$npm_package_config_stage",
    "fullstart:80": "npm run package && npm run start:80",
    "fullstart": "npm run package && npm start",
    "info:stage": "sls info -v -r $npm_package_config_region --stage",
    "info": "sls info -v -r $npm_package_config_region",
    "invoke:local": "sls invoke local -f",
    "lint:fix": "npm run lint -- --fix",
    "lint": "eslint src __tests__",
    "logs:custom": "sls logs -v -t -i $npm_package_config_log_fetch_refresh_interval -r $npm_package_config_region --startTime $npm_package_config_log_fetch_start_time -f",
    "logs:dev": "sls logs -v -t -i $npm_package_config_log_fetch_refresh_interval --stage dev -r $npm_package_config_region --startTime $npm_package_config_log_fetch_start_time -f",
    "logs:int": "sls logs -t -i $npm_package_config_log_fetch_refresh_interval --stage int -r $npm_package_config_region --startTime $npm_package_config_log_fetch_start_time -f",
    "logs:prod": "sls logs -t -i $npm_package_config_log_fetch_refresh_interval --stage prod -r $npm_package_config_region --startTime $npm_package_config_log_fetch_start_time -f",
    "logs": "npm run logs:$npm_package_config_stage",
    "offline:80": "sudo node --require source-map-support/register --inspect --inspect-port=localhost:$npm_package_config_inspector_port ./node_modules/.bin/serverless offline start --port $AP_PORT --noTimeout",
    "offline": "cross-env SLS_DEBUG=* node --require source-map-support/register --inspect --inspect-port=localhost:$npm_package_config_inspector_port ./node_modules/.bin/serverless offline start --port $AP_PORT --noTimeout",
    "package": "npm run build && sls package --stage $npm_package_config_stage -r $npm_package_config_region",
    "precommit": "npm run lint:fix && npm run coverage",
    "print": "cross-env SLS_DEBUG=* sls print -v --region $npm_package_config_region --stage $npm_package_config_stage",
    "start:80": "cross-env AP_PORT=\"80\" npm run start:run:80",
    "start:run:80": "npm run build && concurrently -k -p='{name} {time}' -n='worker,web   ' -t='HH:mm:ss' -c bgBlue,bgMagenta 'npm run build:watch -- --skip-initial-build' 'npm run offline:80'",
    "start:run": "npm run build && concurrently -k -p='{name} {time}' -n='worker,web   ' -t='HH:mm:ss' -c bgBlue,bgMagenta 'npm run build:watch -- --skip-initial-build' 'npm run offline'",
    "start": "cross-env AP_PORT=\"8000\" npm run start:run",
    "tag": "git tag -am $npm_package_version $npm_package_version && git push --tags",
    "test:wip": "jest -t wip --passWithNoTests",
    "test": "jest --passWithNoTests"
  },
  "dependencies": {
    "aws-sdk": "2.188.0",
    "babel-runtime": "6.26.0",
    "circular-json": "0.5.1",
    "delver": "1.1.2",
    "dynamoose": "0.8.6",
    "jest": "22.1.4",
    "lodash": "4.17.5",
    "moment": "2.20.1",
    "node-fetch": "2.0.0",
    "qs": "6.5.1",
    "strip-ansi": "4.0.0",
    "url-parse": "1.2.0",
    "us": "2.0.0",
    "uuid": "3.2.1",
    "warewolf": "2.0.6"
  },
  "devDependencies": {
    "@babel/cli": "7.0.0-beta.39",
    "@babel/core": "7.0.0-beta.39",
    "@babel/plugin-proposal-object-rest-spread": "7.0.0-beta.39",
    "@babel/plugin-proposal-optional-chaining": "7.0.0-beta.39",
    "@babel/preset-env": "7.0.0-beta.39",
    "babel-loader": "8.0.0-beta.0",
    "chalk": "2.3.0",
    "concurrently": "3.5.1",
    "cross-env": "5.1.3",
    "dotenv": "5.0.0",
    "eslint": "4.17.0",
    "eslint-config-airbnb-base": "12.1.0",
    "eslint-plugin-import": "2.8.0",
    "regenerator-runtime": "0.11.1",
    "rimraf": "2.6.2",
    "serverless": "1.26.0",
    "serverless-aws-documentation": "1.0.0",
    "serverless-domain-manager": "2.2.2",
    "serverless-offline": "3.16.0",
    "serverless-plugin-webpack": "1.3.0",
    "source-map-loader": "0.2.3",
    "source-map-support": "0.5.3",
    "webpack": "3.10.0",
    "yargs": "11.0.0"
  },
  "jest": {
    "testEnvironment": "node",
    "testPathIgnorePatterns": [
      "/build/",
      "/dist/",
      "/node_modules/"
    ],
    "verbose": true
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": "airbnb-base",
    "env": {
      "node": true,
      "jest": true
    },
    "plugins": [
      "import"
    ],
    "root": true,
    "rules": {
      "no-multi-spaces": 0,
      "key-spacing": 0,
      "semi": [
        2,
        "never"
      ],
      "import/no-extraneous-dependencies": [
        2,
        {
          "devDependencies": [
            "__tests__/**"
          ]
        }
      ],
      "global-require": 0,
      "import/prefer-default-export": 0,
      "no-console": [
        2,
        {
          "allow": [
            "dir",
            "error",
            "info",
            "warn"
          ]
        }
      ],
      "no-param-reassign": 0,
      "no-use-before-define": 0
    }
  },
  "directories": {
    "build": "./build",
    "dist": "./dist",
    "doc": "./docs",
    "lib": "./src",
    "schemas": "./schemas",
    "scripts": "./scripts",
    "tests": "./__tests__"
  },
  "bugs": {
    "email": "tech@hixme.com",
    "url": "https://bitbucket.com/hixme/application-service/issues"
  },
  "keywords": [
    "hixme",
    "application",
    "application-service",
    "application service",
    "serverless",
    "lambda"
  ],
  "engines": {
    "node": ">=6 <9.0",
    "npm": ">=4.0 <6.0"
  },
  "os": [
    "darwin",
    "linux"
  ],
  "readmeFilename": "README.md"
}
