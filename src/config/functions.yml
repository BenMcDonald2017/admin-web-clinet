ping:
  description: ${self:custom.documentation.summary} | Ping / Pong
  handler: build/routes/ping/index.ping
  events:
    - http:
        path: ping
        method: get
        cors: true
        documentation:
          summary: 'Ping The Service'
          description: Service Up? Check w/ Ping / Pong!

cancelPreviousHealthBenefits:
  description: ${self:custom.documentation.summary} | Cancel Previous Health Benefits [POST]
  handler: build/routes/cancel/index.cancelPreviousHealthBenefits
  events:
    - http:
        path: cancel/{employeePublicKey}
        method: post
        cors: true
        parameters:
          path:
            employeePublicKey: true

createEnvelope:
  description: ${self:custom.documentation.summary} | Create Envelope [POST]
  handler: build/routes/envelope/index.createEnvelope
  events:
    - http:
        path: envelope
        method: post
        cors: true
        documentation:
          summary: Create Envelope (on DocuSign)
          description: Create Envelope (on DocuSign) [POST]
          requestBody:
            description: "Request body description"
          methodResponses:
            -
              statusCode: "200"
              responseBody:
                description: "Response body description"
            -
              statusCode: "400"
              responseModels:
                "application/json": "ErrorResponse"
          requestModels:
            "application/json": "CreateEnvelope"

getEnvelopeSigners:
  description: ${self:custom.documentation.summary} | Get Envelope Signers [GET]
  handler: build/routes/envelope/recipients/index.onGetEnvelopeSigners
  events:
    - http:
        path: envelope/{envelopeId}/signers
        method: get
        cors: true
        parameters:
          paths:
            envelopeId: true
        documentation:
          summary: Get Envelope Signers
          description: Get Envelope Signers [GET]
          requestBody:
            description: "Request body description"
          methodResponses:
            -
              statusCode: "200"
              responseBody:
                description: "Response body description"
            -
              statusCode: "400"
              responseModels:
                "application/json": "ErrorResponse"
          requestModels:
            "application/json": "GetEnvelopeSigners"

getEnvelope:
  description: ${self:custom.documentation.summary} | Get Envelope [GET]
  handler: build/routes/envelope/index.getEnvelope
  events:
    - http:
        path: envelope/{envelopeId}
        method: get
        cors: true
        request:
          parameters:
            paths:
              envelopeId: true
        documentation:
          summary: Get Envelope
          description: Get Envelope [GET]
          requestBody:
            description: "Request body description"
          methodResponses:
            -
              statusCode: "200"
              responseBody:
                description: "Response body description"
            -
              statusCode: "400"
              responseModels:
                "application/json": "ErrorResponse"
          requestModels:
            "application/json": "GetEnvelope"

createSigningSession:
  description: ${self:custom.documentation.summary} | Create Signing Session [POST]
  handler: build/routes/envelope/sign/index.createSigningSession
  events:
    - http:
        path: envelope/{envelopeId}/sign
        method: post
        cors: true
        request:
          parameters:
            paths:
              envelopeId: true
        documentation:
          summary: Create Signing Session
          description: Create Signing Session [GET]
          requestBody:
            description: "Request body description"
          methodResponses:
            -
              statusCode: "200"
              responseBody:
                description: "Response body description"
            -
              statusCode: "400"
              responseModels:
                "application/json": "ErrorResponse"
          requestModels:
            "application/json": "CreateSigningSession"

getCartWithApplicationStatus:
  description: ${self:custom.documentation.summary} | Get Cart With Application Status [GET]
  handler: build/routes/status/index.getCartWithApplicationStatus
  events:
    - http:
        path: status
        method: get
        cors: true
        request:
          parameters:
            querystrings:
              employeePublicKey: true
              returnUrl: true
        documentation:
          summary: Get Cart With Application Status
          description: Get Cart With Application Status [GET]
          queryParams:
            -
              name: "employeePublicKey"
              description: "The Employee Public Key"
            -
              name: "returnUrl"
              description: "The URL That DocuSign Should Return to After Signing"
          methodResponses:
            -
              statusCode: "200"
              responseBody:
                description: "Response body description"
            -
              statusCode: "400"
              responseModels:
                "application/json": "ErrorResponse"

getCancelationSigningLink:
  description: ${self:custom.documentation.summary} | Get an Cancelation Signing Link [GET]
  handler: build/routes/cancel/sign/index.getCancelationSigningLink
  events:
    - http:
        path: cancel/sign
        method: get
        cors: true
        request:
          parameters:
            querystrings:
              employeePublicKey: true
              envelopeId: true
              returnUrl: true

getApplicationSigningLink:
  description: ${self:custom.documentation.summary} | Get an Application Signing Link [GET]
  handler: build/routes/envelope/sign/index.getApplicationSigningLink
  events:
    - http:
        path: sign
        method: get
        cors: true
        request:
          parameters:
            querystrings:
              employeePublicKey: true
              envelopeId: true
              returnUrl: true
        documentation:
          summary: Get an Application Signing Link
          description: Get an Application Signing Link [GET]
          queryParams:
            -
              name: "employeePublicKey"
              description: "The Employee Public Key"
            -
              name: "envelopeId"
              description: "The Envelope Id"
            -
              name: "returnUrl"
              description: "The URL That DocuSign Should Return to After Signing"
          methodResponses:
            -
              statusCode: "200"
              responseBody:
                description: "Response body description"
            -
              statusCode: "400"
              responseModels:
                "application/json": "ErrorResponse"

saveSignatureStatus:
  description: ${self:custom.documentation.summary} | Save Signature Status [POST]
  handler: build/routes/envelope/sign/index.saveSignatureStatus
  events:
    - http:
        path: sign
        method: post
        cors: true
        documentation:
          summary: Save Signature Status [POST]
          description: Save Signature Status [POST]
          requestBody:
            description: "Request body description"
          methodResponses:
            -
              statusCode: "200"
              responseBody:
                description: "Response body description"
            -
              statusCode: "400"
              responseModels:
                "application/json": "ErrorResponse"
          requestModels:
            "application/json": "SaveSignatureStatus"
