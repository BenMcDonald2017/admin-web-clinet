service:
  NAME:         ${file(package.json):name}
  STAGE:        ${opt:stage, env:NODE_ENV, file(package.json):config.stage, 'int'}
  REGION:       ${opt:region, file(package.json):config.region, 'us-west-2'}
  RUNTIME:      ${file(package.json):config.runtime, 'nodejs6.10'}
  VERSION:      ${file(package.json):version}
  DESCRIPTION:  ${file(package.json):description}

documentation:
  description:  Hixme API | ${file(package.json):description}
  summary:      ${file(package.json):description}
  version:      ${file(package.json):version}
  models:       ${file(schemas/all.yml)}
  # authorizers:  ${file(schemas/authorizers.yml)}
  resources:    ${file(schemas/resources.yml)}

dotENV: &dotENV
  # finds an '.env' file, if any, and sets environment vars
  ${file(env.js):getAndSetVarsFromEnvFile}

testValues:
  ${file(env.js):testFunction}

# stackTags:    &stackTags
#   BASE_PATH:    ${self:custom.customDomain.basePath}
#   DOMAIN_NAME:  ${self:custom.customDomain.domainName}
#   REGION:       ${self:custom.service.REGION}
#   SERVICE:      ${self:custom.service.NAME}
#   STAGE:        ${self:custom.service.STAGE}
#   VERSION:      ${self:custom.service.VERSION}

# environmentVariables:       &environmentVariables
#   # <<: [*stackTags, *dotENV] # ideally, this line would have worked
#   <<:                        *stackTags
#   DOCUSIGN_ACCOUNT_ID_PROD: ${self:custom.dotENV.DOCUSIGN_ACCOUNT_ID_PROD}
#   DOCUSIGN_ACCOUNT_ID:      ${self:custom.dotENV.DOCUSIGN_ACCOUNT_ID}
#   DOCUSIGN_BASE_URL_PROD:   ${self:custom.dotENV.DOCUSIGN_BASE_URL_PROD}
#   DOCUSIGN_BASE_URL:        ${self:custom.dotENV.DOCUSIGN_BASE_URL}
#   DOCUSIGN_IKEY_PROD:       ${self:custom.dotENV.DOCUSIGN_IKEY_PROD}
#   DOCUSIGN_IKEY:            ${self:custom.dotENV.DOCUSIGN_IKEY}
#   DOCUSIGN_PASSWORD_PROD:   ${self:custom.dotENV.DOCUSIGN_PASSWORD_PROD}
#   DOCUSIGN_PASSWORD:        ${self:custom.dotENV.DOCUSIGN_PASSWORD}
#   DOCUSIGN_USER_PROD:       ${self:custom.dotENV.DOCUSIGN_USER_PROD}
#   DOCUSIGN_USER:            ${self:custom.dotENV.DOCUSIGN_USER}
#   EFFECTIVE_DATE:           ${self:custom.dotENV.EFFECTIVE_DATE}
#   HEALTH_BUNDLE:            ${self:custom.dotENV.HEALTH_BUNDLE}
#   cartTable:                ${self:custom.dotENV.cartTable}
#   personsTable:             ${self:custom.dotENV.personsTable}
#   applicationTable:         ${self:custom.dotENV.applicationTable}
#   applicationOutputBucket:  ${self:custom.dotENV.applicationOutputBucket}
#   applicationSourceBucket:  ${self:custom.dotENV.applicationSourceBucket}

customDomain:
  basePath:             ${file(env.js):getAPIBasePath}
  certificateName:      "*.hixme.com"
  createRoute53Record:  false # LEAVE THIS (route53 record already created!)
  domainName:           ${file(env.js):getHostname}
  stage:                ${file(env.js):getDesiredStageFromPackageJSON}

serverless-offline:
  prefix: ${file(env.js):getAPIBasePath}
